浏览器常驻的五大线程：
						1. js引擎 (操作dom结果)
						2. CUI线程 (渲染页面)
						3. http网络请求线程
						4. 定时触发器线程
						5. 浏览器事件触发线程

		注意点：
				1. js引擎和GUI线程是互斥的，当其中一个线程运行时，另一个线程就处于冻结状态。(因为js操作dom会影响到GUI的渲染结果)

				2. js的主线程是单线程，但是由于事件驱动等各种原因，使得js可以异步执行。
					而同步和异步分别在不同的执行场所，同步在主线程中，异步在


		同步任务：
					执行栈相当于js主线程。
					例子：一个foo函数里面有bar子函数。

					1.当没有一条语句执行时，执行栈为空栈。
					2.当执行foo函数时，创建了一帧，该帧里面有foo函数的形参、局部变量(预编译过程)，然后把这一帧压入栈中。
					3.执行foo函数里面的代码，当执行到bar函数时，又创建一帧，
					  该帧里面有bar函数的形参、局部变量，并压入到栈中。
					4.bar函数执行完毕，弹出栈。
					5.foo函数执行完毕，弹出栈。
					6.此时执行栈又变为空栈。


重新理解定时器：
				定时器并不是设置的延时时间到了就执行，而是将任务推到浏览器的任务队列中，
				在同步队列结束后，再依次调用任务队列中的任务。
				setTimeout(function(){},0)的意思是执行栈为空时才执行，但是实际情况是html标准最低要4ms。
				setInterval是每隔一段时间，就将任务放在event queue中。
