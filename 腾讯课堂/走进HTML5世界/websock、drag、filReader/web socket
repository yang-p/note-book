WebSocket对象：
				一个新的协议，跟http协议没有关系
				目的是为了兼容现有浏览器的握手规范
				【必须浏览器和服务器都支持webSocket协议才能使用】
				【客户端与服务端都可以主动传数据给对方】
				【能实现跨域请求】

在http1.0版本中，默认为短链接：
		比如同时向服务器请求多个图片时，服务器只会返回第一张图片，然后立马断开连接，
		接着继续连接服务器，然后返回第二张图片，任然是又断开连接，
		以此循环，需要多个三次握手和四次挥手才能将图片获取完。

在http1.1版本中，默认为长链接：
		同时想服务器请求多个图片时，服务器返回图片后不会立马断开连接，而是有一个短暂的
		连接时间，在这段时间内就可以将剩下的图片返回给客户端。

http协议中，服务端不能主动联系客户端，只能由客户端发送请求

————————————————————————————————————————————————————————————————————————————————————————

当web应用程序调用new WebSocket(url)时，浏览器就开始与地址为url的服务器建立握手连接的过程：

	1、浏览器与websocket服务器通过TCP握手建立连接，如果建立失败以下步骤不会执行，并且会收到错误通知。

	2、TCP建立成功后，浏览器通过http协议传送webSocket支持的版本号、原始地址、主机地址等字段给服务器端。

	3、webSocket服务器收到服务器发来的请求后，如果数据包的数据和格式正确，就接收本次握手连接，并给出
		相应的数据回复，这些数据也是采用http协议传输。

	4、浏览器收到服务器的回复后，如果数据包的数据和格式都正确，就表示本次连接成功，并触发onopen消息，
		此时就可以通过send接口向服务器发送数据，如果握手失败则触发onerror消息


________________________________________________________________________________________

WebSocket的实例对象的事件及方法：
				onopen		连接成功时触发
				onerror		连接失败时触发
				onclose		连接关闭时触发
				onmessage 	接收webSocket服务器返回的数据（数据放在事件对象中）

				send(data)	发送数据给webSocket服务器（一般放在onopen的处理函数中）
				close()		断开链接