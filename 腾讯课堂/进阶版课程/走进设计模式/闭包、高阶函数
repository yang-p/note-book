变量作用域：由内向外
变量周期：
			对于全局变量来说，除非手动消除它，否则他的周期是永久的。
			对于在某个函数的直接变量，当这个函数执行完成并退出该函数时，表示着这个变量的生命周期结束。

闭包的经典例子：
				有5个div，用for循环给他们添加点击事件，当点击第一个div时输出0，当点击第二个div时，输出1，以此类推。
				此时就会遇到闭包问题，即无论点击那个div都是5，因为点击事件是异步操作，当点击时，for循环早就结束了。
				解决办法是，给点击事件添加立即执行函数，for循环每执行一次，就会生成一个函数，他们看似结构相同，但是他们是相互独立的。

闭包的作用：
			封装变量---把一些不需要暴露在全局的变量封装成私有变量。
			面向对象能实现的，闭包也能实现。	

闭包与内存管理：
				内存泄漏并不是闭包引起的，不论变量放在闭包还是全局作用域中，对内存的影响都是一样的，通过将变量的值设置为null即可解决内存泄漏问题。

高阶函数：
			高阶函数指满足以下任意一个条件的函数：
			1. 函数可以作为参数传递
					可以将业务代码中可变和不变的代码分离出来，应用场景回调函数
			2. 函数可以作为返回值输出


面向切面编程(AOP)作用: 
						把一些和核心业务逻辑无关的功能模块分离出来，再通过‘动态织入’的方式，添加到业务逻辑模块中。

如何在js中实现AOP:
					把一个函数动态‘织入’到另一个函数中	