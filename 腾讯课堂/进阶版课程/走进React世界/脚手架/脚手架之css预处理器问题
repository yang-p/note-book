
解决less预处理器问题：
			1.解决该问题的前提条件是解决react脚手架配置问题（详情请看react脚手架篇）。

			2.下载less less-loader  	npm i less less-loader -D

			3. 分别在webpack.config.dev.js和webpack.config.prod.js配置文件中找到module对象，
				然后在module的rules数组中找到关于css的部分。
				修改 test: /\.css$/    为  test : /\.(css|less)$/
				然后在use的最下方添加一句 loader : require.resolve('less-loader')

解决sass预处理器问题：
			和less一样

————————————————————————————————————————————————————————————————————————————————————————
css的模块化：


开启css的 modules的两种方法：
		第一种：
		css-loader自带modules,但是默认是未开启状态

		1、和解决less预处理器问题的步骤差不多，找到rules数组下的css部分，use数组里面有一个
		options对象，在该对象里面添加一句   modules : true

		2、在js文件中引入css文件时，会得到一个对象，该对象里面的选择器将作为属性

			例子：
				  import Obj from './index.css';
				 <button className={Obj.btn}>我是按钮</button>

		第二种：
				crate-react-app 项目名 --scripts-version react-scripts-cssmodules
				该方法是在项目初始化的时候做的。
				并且开启css的modules后，必须要按照 filename.module.css的命名规范。
				比如：
						两个css文件 button.css  button.module.css
						当他们同时引入到js文件中，第一个引入的是空对象，第二个才是正确的。
					