			三种引入vue的方式：
								1. CDN
								2.webpack
								3.vue脚手架

CDN引入方式：
			1、在html页面的head标签里面引入vue
			2、在body标签里面创建一个元素,比如<div id='app'></div>用来挂载vue

——————————————————————————————————————————————————————————————————————————————————
vue的基本使用：
				第一步，实例化全局构造函数Vue       new Vue()
				第二步，在实例化Vue时，传递配置参数    

				new Vue({
					el : '#app',
					data : {
						msg : 'hello world'
					},
					methods : {
						fn(){.....}
					}

				})


VUe的配置参数介绍
			el  
				作用：将HTML元素上某个元素当做挂载点
				属性值： 元素的css选择器

			data 
				作用：对el绑定的html元素进行数据绑定，里面的所有属性会被代理到Vue的实例化对象顶层。

				属性值：
				使用方法：<div>{我是data对象的某个属性}</div>

			methods
				作用：里面放的都是方法，并且和data里面的属性一样会被代理到Vue的实例对象顶层。
				注意点：
						当Vue实例对象中的变量发生改变时，展示该变量的dom节点就会重新渲染，
						但是其他dom节点的内容带有methods对象中的方法的也会触发该方法的执行。
						（原因：VUe不会关心methods对象中的方法内部写的什么，但是当html模板中的
						某个dom节点重新渲染时，为了不漏掉该方法，所以也重新执行了一次该方法。）


			computed
				作用：
				    1、和methods类似，但是他会计算方法里面引用的VUe实例对象中的属性是否变化，
					  如果发生变化，则重新渲染添加了该方法的dom节点的内容。

					2、computed对象里面的属性(也就是方法)具有缓存机制，第一次执行的方法是从computed
					里调用过来的，并且会将该方法缓存起来。当再次执行相同的方法时，将会从缓存中调用。

				用法：
						在html模板中，不写方法执行的形式，而是写变量(直接写方法名)的形式

				computed的复杂计算用法：
									给computed对象中的函数，写get和set方法。
									get方法里面写依赖属性(Vue实例对象的属性)，当依赖属性的属性值
									发生改变时，会触发get方法，从而触发该函数执行。
									set方法接收一个参数，当该某个东西赋值给函数时，触发set方法。
									set的参数就是用来接收那个东西的。


	注意点：
			1、methods里面的方法不能写为箭头函数，因为普通函数里面的this指向Vue的实例对象。
			2、

------------------------------------------------------------------------------------------

如何在挂载点html元素内实现数据绑定：

{{}} 
		里面放变量或表达式，但不可以放 循环语句、判断语句(三目运算符除外)、函数声明等。

		放变量：
				{{var}}
		放表达式：
				{{ var1 + var2 }}
		放函数调用：
					{{ fn() }}

	注意点：{{}}输出在html模板中的变量默认是是字符串类型（防止被攻击）