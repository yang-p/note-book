引入路由文件：
-------------------------------------------------------------------------------------
创建模板
		<router-link to='/home'>home页面</router-link> // router-link被解析后，是a标签
----------------------------------------------------------------------------------------
创建组件：
		第一种方法：
			let Home = {
				template:`<div><h1>我是Home组件</h1></div>`
			}

		第二种方法：
				<template id='home'>
					<div><h1>我是Home组件</h1></div>
				</template>
			let Home = {
				template : '#home'
			}
------------------------------------------------------------------------------------------			
配置路由
		一级路由的写法：
		routes = [
			{'path':'/home',component:Home},// 当路由为'/'时，使用Home组件
			{'path':'/',redirect:'/home'},// 当路由为'/'时，跳转到'/home'
		]
		二级路由的写法：
		routes = [
			{
			'path':'/home',
			'component':Home,
			'children':[
				{'path':'/home/home1','conponent':Home1}
			]
			},
			{'path':'/',redirect:'/home'},
		]


-----------------------------------------------------------------------------------------
生成路由
		let router = new VueRouter({routes})

----------------------------------------------------------------------------------------
启动路由
			new Vue({
				el:'#app',
				router,
				methods:{
					push(){
						router.push({'path':'/home'});//当执行push方法时，跳转到'/home'路由。
						router.replace({'path':'/home'});//当执行replace方法时，跳转到'/home'路由。
					}
				}
			})
			注意点：
					1、router是VueRouter的实例化对象，因此它身上有很多关于路由的方法。
					2、push和replace的区别是，push跳转前会记录当前路由，以便可以返回当前
						路由，而replace则是将要跳转的路由替换成当前路由，不具有返回功能。

---------------------------------------------------------------------------------------
注意点：
		1、选中的路由有个class选择器是：router-link-exact-active