第一步，使用vue之前需要引入VUE相关的包

第二步，创建vue的实例对象

第三步，传参给Vue函数


注意点：vue只支持ie8以上的浏览器
__________________________________________________________________________________

let vue = new Vue({
	el : '#app',
	data:{name:'yangpeng'},
	template:'<h1>{{name}}</h1>',
	computed:{},
	watch:{},
	methods:{}

})

el：给vue绑定html元素挂载点
	注意点：
			1、el的属性值是css选择器，即选择html中的某个元素，以便进行绑定。
			2、在vue2.x版本中，el不能绑定html根标签和body标签。

data: 存放变量（成为Vue的实例化对象的属性）
	 注意点：里面的变量可以通过{{}}包裹起来直接用在挂载点的html元素的内容上。
	 		但是无法直接用在元素的属性上。

template:字符串模板，里面放html元素，放置的这些元素会替换掉el绑定的挂载点元素。
		注意点：当有了template属性时，el绑定的挂载点的html元素都会被销毁，然后
				替换成template的字符串模板。
				template的字符串模板里面可以和el挂载点一样，使用变量、方法和指令。

computed：	计算属性,里面放的是方法，这些方法的作用是对data里面的属性进行计算，
			该方法名会被当做新的属性名，可以像data中的属性那样，进行插值。
		注意点：
				computed中的方法，具有get和set方法(有一个参数)，
				get方法是用来对data中的属性进行计算，
				set方法是当data属性的属性值改变时，触发set方法，然后回传给get方法。

watch: 监听属性的改变，当属性改变时，触发watch

methods: 里面放方法

注意点:	上面的属性都是Vue规定的属性，在里面放自定义属性，会被当做私有属性。
		私有属性不会被Vue的实例化对象所访问。