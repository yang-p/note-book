columns 多列布局

column-count 	文本呈现多少列显示，属性值为大于等于1的整数。
column-width 	一列的宽度，此时的count == 容器的宽度 / (每列的width + 列与列之间的间隔)。
columns: width count; 浏览器首先会满足每一列宽度大于等于设置的宽度，
					  以此为前提然后再判断能不能满足count。

			注意点：上面的三个属性，建议要么用列宽column-width，要么用列数column-count。

column-gap 	设置列与列之间的距离，列与列的间隔默认是由字体大小决定的。
column-rule 不占任何空间位置
		column-rule-width	默认值为medium,和border-width属性一样，值可以是浮点数也可以是
							关键词，但是一定不能为负数。
		column-rule-style 	默认值为none，和属性值border-style的属性值一样。
		column-rule-color	和border-color用法一样。
column-span 设置文章的标题，其属性值只有1或all。
			设置在标题标签的样式中，当为1时，标题在第一列上方，和不写的效果一样。
			当为all时，标题在第一列上方，其他列和第一列的高度相同。
————————————————————————————————————————————————————————————————————————————————
盒模型
	怪异盒模型： 触发条件首先必须是混杂模式然后必须是在IE6及以下的浏览器。
	box-sizing: border-box(按照IE6及以下)|content-box(默认值，按照W3C标准进行渲染);


—————————————————————————————————————————————————————————————————————————————————
弹性盒子
	主轴(X轴)，侧轴/交叉轴(Y轴)，容器(父元素), 项目(子元素)。
	display: flex;	
				当父元素设置了display:flex后，所有项目会被排在一行，
				设置在子元素上的以下属性才会生效。


	    			
	flex-grow   放大比例				
	flex-shrink 缩小比例

				放大比例的原理是，假如有三个div，设置了自身的宽高，那么用容器的
				宽度减去三个div的总宽度，剩下的宽度由这三个div按比例分配，假如
				第一个div设置了flex-grow: 1;第二个flex-grow: 2;第三个flex-grow: 3;
				那么他们瓜分剩余宽度被分成6份，每个div得到的宽度比例是1:2:3;

				缩小比例的原理是，当为父元素添加了display: flex后，系统默认隐式的
				为每个子元素的样式添加了flex-shrink: 1; 当子元素排在一行时超出的部分
				按比例划分给每个子元素，子元素的现在宽度等于原本的减去划分过来的宽度。

	flex-basis  伸缩基准值
				和width、height的作用一样，用来设置元素的宽度或高度，由于默认的主轴是
				X轴，所以默认是设置元素的宽度。要想设置元素的高度，那么在父元素上添加
				flex-direction: column; 如果子元素中同时出现了例如width和默认的flex-basis
				那么flex-basis会覆盖width设置的值。

	    flex    复合属性，是以上三个属性的简写。
	    		flex: 1; 相当于 flex: 1 1 0%; 其中第一个1为flex-grow的，第二个1是flex-shrink的，0%是flex-basis，
	    		flex: 1;对应的是flex-grow。

	order 		改变排列顺序
				默认是按照dom结构排列，而order可以改变这种排列方式，order的值为
				整数，即可正可负，然后按照数字从小到大的顺序排列。

	aligin-self 单个项目对齐方式
				默认对齐方式是以容器的顶部对齐，有以下属性值:
				flex-end底部对齐、
				center容器的中间对齐、
				baseline内容有文本的子元素设置该属性，那么他们会顶部对齐，
						即使其中一个元素设置了margin-top，和该元素基线对齐的元素
						也会相应的移动，直至他们的顶部在一条线上，如果某个元素
						没有文本，那么没有文本的元素的底部会和有文字的元素的
						文字底部对齐，即保持一条线、
				stretch 让子元素的高度继承父元素，如果有height属性，那么以height为主、
				flex-start、
				auto


以下六个属性设置在容器上：
			flex-direction 改变主轴方向
							row 	默认值，主轴在水平方向，起点在左端、
							row-reverse 	主轴在水平方向，起点在右端、
							column 			主轴在垂直方向，起点在上沿、
							column-reverse  主轴在垂直方向，起点在下沿。

			flex-wrap	是否换行
						默认情况下所有的子元素排列在一行，默认属性值为nowrap
						，当属性值为wrap时，超出容器宽度的元素进行换行，
						当属性值为wrap-reverse时，和设置wrap时的排列是倒过来的。
						
			flex-flow	 flex-direction和flex-wrap的简写。

			justify-content 项目在主轴上的对齐方式
							默认情况下主轴水平方向时，项目左对齐即flex-start，
							flex-end      右对齐、
							center        中间对齐，即所有元素向元素顶部的中间对齐。
							space-between 两端对齐，每两个项目之间的间隔距离相等、
							space-around 每个项目两边的间距相等，即每两个项目之间
										 的间隔距离与单个项目左右两边的间距相等。

			align-items    在侧轴上如何对齐
							和align-self的作用一样，但是该属性是设置在容器上，
							作用于所有的项目，如果项目设置了align-self属性，
							那么该项目以align-self为主。

			align-content 多根轴线的对齐方式
							justify-content是所有项目在一个主轴线上，若像这种情况，
							那么align-content属性无效。align-content的用法及其属性和
							justify-content完全一样。

弹性盒子的应用：
				实现三列布局，父元素充满body，并设置为flex，左右子元素固定宽度，
								中间子元素设置flex-grow: 1;