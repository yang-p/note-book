12分--16--
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1)同源策略是浏览器的一个非常重要的概念。
同源：端口号、协议、域名都相同。
只要以上三种任意一种不相同，那么都属于非同源(跨域)，在对方服务器未授权的情况下，
不能读写对方的资源。

服务器代理中转：
2)一个客户端页面脚本只能访问自己同源的服务器，如果访问其他服务器则会受到浏览器的
同源策略限制，要想该脚本访问到对方的服务器，只能是自己的服务器去访问对方的
服务器，该脚本再访问自己的服务器，自己的服务器将访问到的数据响应给该脚本。

3)一个服务器能从另一个服务器上面获取数据，因为它们不走浏览器，
所以不受同源策略的影响，记住同源策略只是浏览器的概念。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
协议：	http、https、ws(双向通讯)、wss。
域名：  http://www.baidu.com ————>baidu.com叫域名,www叫该主机名所提供的服务，
								  该网址的主机所提供的是web服务。
	 	域名的解析是倒着解析的————>先从一级域名开始，然后是二级域名。。。
        裸域名(不加WWW)————>只能绑定dns，指定域名的ip地址，不能绑定别名。
		域名级别的划分————>http协议的第一个点前面一定是主机名，后面的才是域名，
							每一级的域名通过点分隔开，.com为一级域名，
							baidu.com为二级域名。但是准确的来说，com后面有cn。

端口：将ip地址比作一个房子，那么端口就是房子的门，
	  一个房子有多个门，所以一个ip地址有多个多口号。
	  http协议的默认端口为80，https协议的默认端口为443。

三次握手：
		 第一步，浏览器发送一个SYN包给服务器，表示要建立连接，
		 第二步，服务器得到SYN包后，会发送一个ACK包，表示响应，
		 第三步，浏览器发送ACK包给服务器，表示可以建立连接了。
四次挥手：
		第一步，浏览器向服务器发送一个断开连接的请求，
		第二步，服务器对浏览器进行一次响应，并开始着手断开连接，
		第三步，浏览器发送已经断开连接的请求给浏览器，
		第四步，浏览器对服务器进行一次响应，并等待一段时间，
			    如果服务器没有再向浏览器进行响应，那么整个断开的连接完成。

在浏览器的地址栏中输入一个url发生了什么？
		在客户端有一个DNS，会截取浏览器地址栏中的域名，发送给DNS服务器解析域名，
		然后返回该域名对应的ip地址给DNS客户端，DNS客户端将该ip地址给浏览器，
		然后浏览器向与ip地址对应的服务器发送http请求，三次握手通过后，将数据发送
		到服务器上

完整的url请求：
		第一步，在浏览器的地址栏中输入的域名会首先被发送到dns服务器，进行域名解析，
				然后返回服务器的ip。
		第二步，浏览器通过TCP协议与解析出来的ip相对应的服务器建立连接。(三次握手)
		第三步，浏览器向web服务器(HTTP服务器)发送http协议包，请求服务器里的资源文档。
		第四步，服务器向浏览器发送http协议应答包。
		第五步，浏览器和服务器断开连接(四次挥手)，浏览器开始处理html文档。

TCP和UDP的区别：都是传输层协议。
				TCP面向连接，必须建立一个可靠的连接才能发送数据，
							比如qq加好友，需要对方同意才能成为好友。
				UDP面向非连接，不需要建立连接就发送数据，
							比如发手机短信，只需要直到对方手机号就能发送信息。
常见的http状态码：
			200 	服务器成功返回内容，
			301/2	临时/永久重定向
			304		资源未被修改过
			404		请求内容不存在
			500		服务器暂时不可用
			503		服务器内部错误
浏览器的缓存机制：
			304的原理：
浏览器第一次向服务器请求一张图片,服务器的响应头会返回etag和last-Modified。
当浏览器再次向服务器请求该图片时，请求头会带有if-none-match和if-Modified-since。
浏览器会将上次缓存的该图片的etag的属性值赋给if-none-match，ifnomatch会和服务器
的etag属性值比对。如果比对成功，那么就会返回304，此时浏览器使用上次缓存的这张图片。

			etag标记图片资源，相当于一个id，唯一标识该图片。
			last-Modified(服务器最后修改的时间)
			if-none-match 		匹配etag，如果匹配不成功，那么就不取缓存。
			if-Modified-since	将上一次发送过来的时间戳发送回去。

	data: 			服务器响应内容的日期，返回的是0时区的标准日期。
	cache-control：	内容缓存时间
				  no-cache	不缓存
			      no-store
			      max-age	缓存的最大时间
			min-fresh
			max-stale
			Expires		等同于max-age的效果，但是两者同时存在时，其会被max-age覆盖。
			referer