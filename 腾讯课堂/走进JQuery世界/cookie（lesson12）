
http协议是无状态的协议，所以以下是用来标识记录具体用户信息的方法。
1).HTTP首部(requestHeader)：
	①form: e-mail 记录用户的email地址，由于不安全现在不用了。
	②user-agent: 记录的是浏览器的信息，无法识别某个具体用户。
	③referer: 记录从什么链接跳转到当前页面，识别的是上一次浏览的页面。

2).客户端ip地址
		①只能识别当前ip地址对应的机器，但是不能确定是某个用户。
		②inter服务商为电脑分配一个动态ip地址,下一次访问可能是另一个ip。
		③出于安全考虑，隐藏ip地址，ip地址被转换成一个共享的防火墙地址。

3).用户登录

4).胖URL	
		在url中嵌入识别信息的特殊字段，
		当关闭当前网页重新加载该页面时，又会嵌入新的该字段。
		当该页面跳转到其它服务器页面时，不会携带该特殊字段。
		总结：不持久，信息不共享
5).cookie
			cookie是由服务器端生成，发送给User-Agent,(服务器告诉浏览器设置一下cookie)，
			浏览器会将cookie以键值对的形式存储在某个目录下的
			名为cookies的文本文件中。
			下次请求同一网站时，就发送该cookie给服务器(前提是浏览器已启用cookie)。
			cookie是一个小型文件，浏览器对cookie内存做了大小限制
	session：临时存储，仅限于当前页面，如果关闭浏览器，那么就失效了。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
获取cookie的方法：document.cookie

设置cookie属性：
				document.cookie = 'name=yp';
 	注意点：
 			如果以本地形式打开页面，那么在Chrome浏览器上不能
 			存储在cookie中，而IE上可以设置成功。

 			document.cookie = 'name=yp;age=18';
 			age=18不会存在cookie里面，因为浏览器会认为age=18的
 			分号后面是name=yp的描述信息。

为cookie设置失效日期：
				如果不设置以下任意一个值，那么默认是session。

 				Expires 0版本,	value值为时间类型的字符串。
 				max-age 1版本， value值为秒，在控制台显示的是日期。

 	注意点：
 		max-age返回的日期是本初子午线的时间，我们的本地时间
 		是北京时间，相差8个小时，而expires是通过Date对象的
 		形式设置的日期，显示的是北京时间。

 		判断显示的是北京时间还是本初子午线时间，北京时间后缀是
 		000Z，本初子午线后缀是随机生成的xxxZ。
————————————————————————————————————————————————————————————————
cookie的几个属性：
				name 				cookie的属性名称,具有唯一性
				value 				属性的属性值
				domain				域名，可限制cookie作用范围
				expires/max-age 	cookie的有效时间
				path				限制cookie同个域名的作用路径
				size

cookie的增删改查：
查：
   document.cookie 也可以叫做获取cookie。

改：document.cookie = 'name=yangpeng';
	document.cookie = 'name=yp';
	后者能覆盖前者。
	原理：
		他们的PATH路径都是相同的，作用范围都是一个文件，
		但是如果改变其中一个的PATH值，使它俩的作用范围不相等就能共存。
		比如将后者设置为：document.cookie = 'name=yp;path=/';
		注意：'/'代表当前域名的整个文件夹。

增：	要么改操作，要么增操作。

删：	让cookie的某个Name属性日期过期，浏览器就会将该Name属性删除。
