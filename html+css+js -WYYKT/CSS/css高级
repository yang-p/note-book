在很多浏览器中，body默认会有8px的外边距
盒子模型：内边距、外边距、 边框、 内容
         一个盒子的真实宽高为 左右(上下)padding + 左右(上下)border + 内容宽(高)度
————————————————————————————————————————————————————————————
层模型
定位position：

    静态定位static    默认属性值，不脱离文档流。

    inherit           强制继承父元素的position属性。

    绝对定位absolute  
                      脱离原来位置(浮动)进行定位，原来在标准流布局中的位置不会被保留，
                      设置坐标值时，left、right(top、bottom)

    相对定位relative  
                      保留原来位置进行脱离，即在标准流布局中的位置还保留着，
                      其他布局流中的元素不能占它的位置。

    fixed             相对于当前浏览器窗口，不会随着滚动条的滚动而滚动。

绝对和相对定位总结：
      ①当该元素为绝对定位时，如果祖代元素中有设置了定位属性的元素，
      那么以设置了定位属性且最近的元素为参照物；
      如果祖代元素没有设置定位属性的元素，那么就以文档为参照物；

      ②当该元素为相对定位时，那么它是以自己原来的位置作为参照物。
      一般的用法是将设置相对定位的元素作为参照物，子代元素设置绝对定位进行移动；

      ③让块级元素垂直和水平居中:
              首先设置定位流为absolute，然后设置left : 50%;top : 50% ; 
              接着设置该盒子的中心点到现在盒子的左上角，即向左移动盒子宽度的一半，
              向上移动 盒子高度的一半。

BFC(blcok format context)：
       一个元素相当于一个盒子，每个盒子都有特定的渲染规则；
       BFC仅仅只能改变非常小的一点点盒子渲染规则，
       往往是用来解决 ①margin塌陷 和 ②垂直排列的两个元素，margin值不能叠加的问题。

       margin塌陷：
                  父块级元素和子块级元素，当子元素使用margin属性时，
                  属性值绝对值大于父元素的宽度或高度时，子元素会移出父元素。

       垂直方向margin值不叠加的解决方法：给其中一个算上总的高度。

       使用哪种BFC方法需要根据情况来选择；
       
       触发bfc的方式：
                     position:absolute
                     overflow:hidden
                     float:left/right
                     display:inline-block
注意点：
        设置了position:absolute和float:left/right的元素，
        在内部系统会自动将该元素转换成行内块级元素。
————————————————————————————————————————————————————————————
浮动模型：
        浮动会忽略元素是行级、块级还是行内块级。
        float会让元素占队，使元素产生了浮动流，这类元素称为浮动元素；
      浮动元素是不会被块级元素看到的(即块级元素把浮动元素覆盖住了)但是产生了BFC的元素和文本类属性的元素和文本能看到浮动元素(看起来在同一水平面)；

  清除浮动流：
             clear      属性值 left、right、both(左右两边都清除，一般都是用它)
 案例：
   方法①：
   父元素包裹浮动的子元素，在子元素的最后面加一个块级元素，然后在css中只设置clear:both;
         
   原理：
         添加的那个元素将浮动清除后，此时可以把设置了浮动的子元素当做未设置浮动，
         而未设置浮动，那么他们就需要占据空间，但是他们又的确是有浮动效果；

   方法②升级版：
        利用父元素的伪元素来清除浮动，但是要将伪元素设置成块级或行内块级元素。

————————————————————————————————————————————————————————————
文字溢出处理
    单行文本
            white-space : nowrap   //不让文本换行
            overflow : hidden;     //将溢出的文本隐藏，但是刚好在元素宽度的右边线上的文字会被分成两半；
            text-overflow : hidden; //文本后面是三个小圆点，在边线的文字也被隐藏了；

    多行文本
            由于多行文本打点在pc端不能很好兼容低版本浏览器，所以打点是手动设置的。

 解决一个容器放几行文字，而不至于某一行会在边线上显示的问题：
    设置的行高时容器的高度成倍数关系，容器的高度时行高的几倍，就能刚好容纳几行文字；
            

背景图片处理：
  背景图片和文字，比如网页的h1标签
                由于浏览器的标准加载方式是先下载HTML，如果网络很差，则不会或停止下载css和
                js文件，此时用css设置的背景图片就不会显示，比如a标签，
                如果a标签只设置了图片，那么会一片空白，因此需要在html中配上文字，
                但是文字会和图片在一起显示，那么如何隐藏文字？

    两种方法：
          第一种，通过text-index属性，设置属性值大于容器的宽度，然后设置overflow:hidden;

          第二种，利用文本不能在padding中显示，而背景颜色、背景图片能在padding中显示；
          设置容器的高度为0，【如果不设置高度为0，那么容器高度会被文字撑起来】此时背景图片被隐藏了文字溢出了，然后设置padding-top属性的属性值为背景图片的高度，
          此时文字还是在外面，最后设置overflow:hidden;即可。            